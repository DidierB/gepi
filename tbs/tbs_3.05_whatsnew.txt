Welcome to TinyButStrong version 3.05 beta RC

The new features for PHP 5 are available for both packages "PHP 4 or higher" and "PHP 5 E_STRICT".
Please note that the features may change before the final version.
Feel free to send report and comments.

2009-09-19
- fix a bug with "magnet=#" and value to merge is not null:
  the value marged take place of all the attribute instead of the value of the attribute.

2009-09-07
- fix a potential problem about respecting plugin syntax (plugin's events OnFormat and OnOperation) : 
  replace all array(&$Loc->FullName with array($Loc->FullName

2009-08-18
- Security fix: automatic fields ([onload], [onshow] and [var]) are not allowed to call object's methods
  unless property $TBS->MethodsAllowed is set to true. In previous versions, all fields could call an
  object's method. That is a security problem if designer and coder are two different parts.
- TBS is under the LGPL license version 3 instead of 2.1  

2009-07-15
- Bug fix: parameter "attadd" let an extra space when the value is empty. 
  http://www.tinybutstrong.com/forum.php?msg_id=9890

2009-06-19
- Bug fix: parameter "mtype" does't work with "ope=minv".
  http://www.tinybutstrong.com/forum.php?msg_id=9814

2009-06-17
- Bug fix: a template format with numerical definition can not be displayed correclty.

2009-06-10
- If NoErr is set to true, error message can be displayed with [var..errmsg].
- Small changes in error messages.
- Stop the merging if error found with assigned data.

2009-05-18 (Release Candidate)

- Property Assigned has a new syntax.
	Property Assigned enables you to prepare data information before the merging and also to 
	define automatic merges.
	$TBS->Assigned is an array that you can feed with data information.
	Each new entry must be an array containing numerci keys corresponding to arguments of MergeBlock() MergeField().
	To define an automatic merge, add a key 'auto'=>'onload' or 'auto'=>'onshow'.
	To specify which method the arguments are for, add a key 'auto'=>'mergeblock' or 'auto'=>'mergefield'. Default is 'mergeblock'.
	Examples:
  $TBS->Assigned['ass1'] = array('b1', &$data); // will be merged when call $TBS->MergeBlock('ass1')
  $TBS->Assigned['ass2'] = array('b2', 'mysql', 'SELECT * FROM table1'); // will be merged when call $TBS->MergeBlock('ass2')
  $TBS->Assigned['ass3'] = array('b3', &$data, 'auto'=>'onload'); // will be merged automatically using MergeBlock with other [onload].
  $TBS->Assigned['ass4'] = array('f4', date('Ymd'), 'auto'=>'onload', 'type'='mergefield'); // will be merged automatically using MergeField with other [onload].


2009-05-12

- Parameter 'att' is more all-terrain.
-	If parameter 'att' is defined, then 'magnet=#' works to delete the attribute in case the value is empty string ('').
-	If parameter 'att' is defined, then parameter 'attadd' can be used to tell that the value must be added to the
	current value of the attribute instead of replacing it.
- Automatic sublocks: if the data source is a string, then it will be splited using coma (,) as delimiter.
  Useful for ENUM values coming from a database (Idea given by TomH).


2009-05-05

New features:
-------------

- New parameter 'att' which move a TBS field into a XML/HTML attribute before to be merged.
  Examples:
  [var.x;att=class] moves into attribute 'class' of the first tag on the left.
  [var.x;att=div#class] moves into attribute 'class' of the first <div> on the left.
  [var.x;att=+div#class] moves into attribute 'class' of the first <div> on the right.
  [var.x;att=((div))#class] moves into attribute 'class' of the second embedding <div> on the left.
  [var.x;att=table+div#class] moves into attribute 'class' of the first <div> after the first <table> on the left.
	Restriction for MergeBlock() : a TBS error occurs when move on the right over another TBS fields.
	
- MergeBlock() allows automatic sub-blocks. Works with new parameters 'sub1', 'sub2', 'sub3', ...
  (Idea given by Olivier)
  Example: [bl1.ParentName;block=tr+tr;sub1=Childs] ... [bl1_sub1.ChildName;block=tr]
  This example assumes that block 'bl1' is merged with a data source which is an array, an object, or a string.
  And that this data source has a column Childs which is itself an array or an object.
  Block 'bl1_sub1' must be embedded into 'bl1'.

- New property Assigned: allows to assign data for a futur MergeBlock() or MergeField().
	(Idea given by Rudy)
	Please note that the syntax will probably change before the final released. I'm not satisfied of this one. 
  Example:
  $TBS->Assigned['ass'] = array('mergeblock', &$data); // will be merged when call $TBS->MergeBlock('ass')
  $TBS->Assigned['autoass'] = array('mergeblock', &$data, 'auto'=>'onload'); // will be merged automaticall with [onload] fields and block.
  $TBS->Assigned['assfield'] = array('mergefield', date('Ymd')); // will be merged when call $TBS->MergeField('mergefield')

- MergeField() allows to define a set of default parameters.
  (Idea given by Gasper)
  Example: $TBS->MergeField('mf',date('Ymd'),false,array('frm'=>'dd/mm/yyyy')); 

- Parameter 'getbody' now allows to get multiparts, and to take tags or not.
  Example: [onload;file=;getbody=(script)+(style)+body]
  The main goal of this feature is to include Javascript and styles from subtemplates.

- MergeBlock() natively supports Iterator, ArrayObject and IteratorAggregate.
  (Idea given by Olivier)

- MergeBlock() allows columns names with spaces.

- Public and Static are defined when appropriate.
  Some methods are leaved public because they are a hook for some plugins.

Fixed bugs:
-----------
- Fatal error: Call to undefined method clsTbsDataSource::f_Misc_CheckArgLst().
- Warning of 2 undefined variables. http://tinybutstrong.com/forum.php?msg_id=9265
- http://www.tinybutstrong.com/forum.php?msg_id=9508 (fixed but not yet tested)
